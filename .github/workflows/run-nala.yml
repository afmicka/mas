name: Run Nala Tests

on:
    # Temporarily disabled while testing Milo integration
    # push:
    #     branches:
    #         - main
    # pull_request:
    #     branches:
    #         - main
    #     types: [opened, synchronize, reopened]
    workflow_dispatch:

# Prevent multiple runs from happening at the same time
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    run-nala-tests:
        name: Running Nala E2E UI Tests
        runs-on: ubuntu-latest
        timeout-minutes: 20 # Prevent hanging jobs
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2

            - name: Set up Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
                  cache-dependency-path: |
                      **/package-lock.json
                      **/yarn.lock

            - name: Install dependencies
              run: npm ci

            - name: Cache Playwright browsers
              uses: actions/cache@v4
              id: playwright-cache
              with:
                  path: ~/.cache/ms-playwright
                  key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/playwright.config.js') }}

            - name: Install Playwright dependencies
              if: steps.playwright-cache.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps

            - name: Set execute permission for gh.run.sh
              run: chmod +x ./nala/utils/gh.run.sh

            - name: Run Nala Tests via gh.run.sh
              run: ./nala/utils/gh.run.sh
              env:
                  labels: ${{ join(github.event.pull_request.labels.*.name, ' ') }}
                  branch: ${{ github.event.pull_request.head.ref }}
                  repoName: ${{ github.repository }}
                  prUrl: ${{ github.event.pull_request.head.repo.html_url }}
                  prOrg: ${{ github.event.pull_request.head.repo.owner.login }}
                  prRepo: ${{ github.event.pull_request.head.repo.name }}
                  prBranch: ${{ github.event.pull_request.head.ref }}
                  prBaseBranch: ${{ github.event.pull_request.base.ref }}
                  GITHUB_ACTION_PATH: ${{ github.workspace }}
                  IMS_EMAIL: ${{ secrets.IMS_EMAIL }}
                  IMS_PASS: ${{ secrets.IMS_PASS }}

            - name: Cleanup cloned cards
              if: always()
              run: node -e "
                  import('./nala/utils/global.teardown.js')
                  .then(module => module.default())
                  .catch(err => {
                  console.error('Cleanup failed:', err.message);
                  process.exit(0);
                  });"
              env:
                  GITHUB_ACTION_PATH: ${{ github.workspace }}
                  IMS_EMAIL: ${{ secrets.IMS_EMAIL }}
                  IMS_PASS: ${{ secrets.IMS_PASS }}

            - name: Upload screenshots
              uses: actions/upload-artifact@v4
              if: failure()
              with:
                  name: test-results
                  path: test-results
                  retention-days: 7
